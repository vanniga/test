openapi: "3.0.0"
info:
    title: Credit Card System
    description: >
      API to perform Credit Card business use cases.
    contact:
      name: Ramesh
      email: rameezkumar.g@gmail.com
    version: 1.0.0
servers:
  - url: https://test.me/uk/msa/v1/payment
paths:
  /creditcard:
    post: 
        tags: 
             - Credit Card System
        operationId: addCreditCard
        summary: Operation to add the card details into the backend system. 
        description: Addtion operation for Credit Card system.
        parameters: 
            - $ref: '#/components/parameters/RequestID'
            - $ref: '#/components/parameters/RequestTimestamp'
            - $ref: '#/components/parameters/OriginatorID'
            - $ref: '#/components/parameters/AppID'
        requestBody:
            $ref: '#/components/requestBodies/CreditCard'
        responses:
            '204': 
              $ref: '#/components/responses/EmptyResponse'   
            '400':
              $ref: '#/components/responses/BusinessFailureResponse'
            '500':
              $ref: '#/components/responses/SystemFailureResponse'     
    get:
        tags: 
             - Credit Card System
        operationId: getAllCreditCards
        description: Get all credit cards
        parameters:
            - $ref: '#/components/parameters/RequestID'
            - $ref: '#/components/parameters/RequestTimestamp'
            - $ref: '#/components/parameters/OriginatorID'
            - $ref: '#/components/parameters/AppID'
        responses:
            '200':
              $ref: '#/components/responses/CreditCardResponse'
            '204':
              $ref: '#/components/responses/EmptyResponse'
            '400':
              $ref: '#/components/responses/BusinessFailureResponse'
            '500':
              $ref: '#/components/responses/SystemFailureResponse'
components:
  headers:
    RequestID:
      description: RequestID is a unique identifier that is unique for a single request/response message and will be used to map log and error message to consumer's request.
      schema:
        type: string
      example: 'uuid:f81d4fae-8jan-22e5-a765-00a0c91e7ee7'
    RequestTimestamp:
      description: Used to reflect the time when the message was created.
      schema:
        type: string
        format: date-time
      example: '2020-12-20T15:44:30Z'
    ResponseTimestamp:
      description: Used to reflect the time when the message was created within this service for the response
      schema:
        type: string
        format: date-time
      example: '2020-12-20T15:44:45Z'
  requestBodies:
    CreditCard:
      description: Request body for the device provisioning notification. For the event type of PROVISION, accountId, Pod serial number and Modem MACAddress are required.
      content:
        application/json:
          schema: 
            $ref: '#/components/schemas/CreditCard'
  responses:
    BusinessFailureResponse:
      description: |
            Bad Request, consumers will get this error if the request does not contain valid headers and inputs.
      headers:
        RequestID:
          $ref: '#/components/headers/RequestID'
        RequestTimestamp:
          $ref: '#/components/headers/RequestTimestamp'
        ResponseTimestamp:
          $ref: '#/components/headers/ResponseTimestamp'
      content:
        application/json:
          schema:
              $ref: '#/components/schemas/Fault'   
          example:
               code: 3000
               description: Validation Exception
               faultDetails:
                 - name: accountId
                   value: Provide a valid account Id
                   context: FIELD
               severity: ERROR
               sourceSystem: RestAPI
    SystemFailureResponse:
      description: |
            Internal Server Error.
      headers:
        RequestID:
          $ref: '#/components/headers/RequestID'
        RequestTimestamp:
          $ref: '#/components/headers/RequestTimestamp'
        ResponseTimestamp:
          $ref: '#/components/headers/ResponseTimestamp'
      content:
        application/json:
          schema:
              $ref: '#/components/schemas/Fault' 
          example:
               code: 200000
               description: System Exception
               severity: CRITICAL
               sourceSystem: RestAPI
    EmptyResponse:
      description: No Response body
      headers:
        RequestID:
          $ref: '#/components/headers/RequestID'
        RequestTimestamp:
          $ref: '#/components/headers/RequestTimestamp'
        ResponseTimestamp:
          $ref: '#/components/headers/ResponseTimestamp'
    CreditCardResponse:
      description: List of credit cards
      headers:
        RequestID:
          $ref: '#/components/headers/RequestID'
        RequestTimestamp:
          $ref: '#/components/headers/RequestTimestamp'
        ResponseTimestamp:
          $ref: '#/components/headers/ResponseTimestamp'
      content:
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/CreditCard' 
          example:
               - fullName:  John Smith
                 cardNumber: 8712934792147928
                 limit: 2500.00
                 balance: 200.00
                 currency: '£'
  parameters:
    RequestID:
      name: RequestID
      in: header
      description: >
        RequestID is a unique identifier that is unique for a single request/response message and will be used to track consumer's request  through the system. UUID specification (RFC 4122, ITU-T Rec. X.667),used for auditing, and returned in the response.
      required: true
      schema:
        type: string
      example: 8476a9db-f82c-4713-824c-c6046521a947
    RequestTimestamp:
      name: RequestTimestamp
      in: header
      description: Used to reflect the time when the message was created.
      required: true
      schema:
        type: string
        format: date-time
      example: '2022-06-17T09:30:47Z'
    OriginatorID:
      name: OriginatorID
      in: header
      description: Identifies the originator System of the Business Process.
      required: true
      schema:
        type: string
        pattern: '^[a-zA-Z0-9\s-:._]{1,255}$'
      examples:
        ETA:
          value: ETA
        VMPORTAL:
          value: VMPORTAL
        MYVMAPP:
          value: IVR
        TOAGateway:
          value: TOAGateway
    AppID:
      name: AppID
      in: header
      description: >
        Application ID to identify the applicant.For consumers of this API the value will be injected by the API security
        layer and is not to be provided.
      required: true
      schema:
        type: string
        pattern: '^[a-zA-Z0-9\s-:._]{1,255}$'
      example: AKANA
    ResponseTimestamp:
      name: ResponseTimestamp
      in: header
      description: Used to reflect the time when the message sent back to the consumer of the service.
      schema:
        type: string
        format: date-time
      example: '2022-06-17T09:30:47Z'
  schemas:
    CreditCard:
      type: object
      description: The Request object of Provision notification.
      properties:
        fullName:
          description: |
            Given name of the card holder.
          type: string
          pattern: '^[a-zA-Z0-9 ]*'
          maxLength: 50
          minLength: 2
          example: John Smith
        cardNumber: 
          type: integer
          description: >
            card number for the credit card payment system
          example: 5545880003605994
        limit:
          type: integer
          format: int64
          description: >
            credit limit for the consumers.
          example: 2000.00
        balance:
          type: integer
          format: int64
          description: >
            actual amount that the consumer holding and could be utilzed for any purchase.
          example: 500.32
        currency:
          type: string
          pattern: '^[a-zA-Z0-9\s\-\'':!#$%&''*+\-.\/=?^_`{|}~]{1,255}$'
          description: >
            Currency
          example: '£'
      required:
        - cardNumber
        - fullName
        - limit
    Fault:
      type: object
      description: the Fault.
      required:
        - code
        - severity
      properties:
        code:
          type: string
          description: >
            Code represents the fault code composed of three fields separated by  - characters.
            The first field represents the country code (10 for COMMON, 11 for UK). The second field represents the severity (0 for ERROR, 1 for  CRITICAL, 2 for WARNING, 3 for INFO).
            The third field represents the error code 
            1000 description Business Exception   
            2001 description System Exception (meaning Connection Error)
            2002 description System Exception (meaning Read Timeout)
            3000 description Validation Exception
          example: '1000, 2000, 3000'
        severity:
          type: string
          description: >-
            Severity of the message info. Error severity will be either
            CRITICAL, ERROR, WARNING and INFORMATION
          example: ERROR
        description:
          type: string
          description: >
            Technical descriptions associated with errors that assist operation  support team/processes but will NOT be passed back to consumer.  This will be one of the values Business Exception, System Exception
            or Validation Exception.
            example: Business Exception
        sourceSystem:
          type: string
          description: >
            Source system generating the error. This will be one of the values RestAPI or Backend but will NOT be
            passed back to consumers.
          example: RestAPI
        faultDetails:
          items:
            $ref: '#/components/schemas/FaultDetails'
          type: array
          minItems: 0
          maxItems: 200
          description: >-
            Full details of the message as provided by the source System but will NOT be passed back to consumers.
    FaultDetails:
      type: object
      description: the FaultDetails.
      required:
        - name
        - value
        - context
      properties:
        name:
          type: string
          description: Name of the detail provided to supplement the error.
        value:
          type: string
          description: Value of the detail provided to supplement the error.
        context:
          type: string
          description: >-
            If the faultDetails is applicable for a particular instance of a request payload, context information can be provided here.
          example: >-
            Oracle DB
